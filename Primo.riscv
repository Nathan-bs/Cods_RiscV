.data
primo: .string "sim\n"
nprimo: .string "nao\n"
nNatural: .string "Entrada invalida.\n"

.text
main:
    #Leitura do número
    li a7, 5 #Read Int
    ecall
    mv t0, a0
    
    blez t0, naoehnatural #Se t0 for menor ou igual a 0, pular para naoehnatural
    #blez analisa se um registrador é menor ou igual a zero
    
    li t6, 1
    beq t0, t6, naoehprimo #Se t0 for igual a 1, pula para naoehprimo
    #beq compara de dois registradores são iguais
    
    addi t1, t0, -1  #Subtrai 1 de t0
    j verfprimo
    
subt:
    addi t1, t1, -1 #Subtrai 1 de t0
    j verfprimo   
    
verfprimo:
    rem t2, t0, t1 #t2 é igual ao resto da divisão entre t0 e t1
    beq t1, t6, ehprimo #t1 é igual a 1, é primo
    beqz t2, naoehprimo #t2 é igual a 0, não é primo
    bnez t1, subt #t1 é diferente de 0, volta para subt
             
naoehnatural:
    li a0,1
    la a1, nNatural
    li a2, 18
    li a7, 64
    ecall
    j end
    
ehprimo: 
    li a0,1
    la a1, primo
    li a2,4
    li a7,64
    ecall
    j end

naoehprimo:
    li a0, 1
    la a1, nprimo
    li a2, 4
    li a7, 64
    ecall
    j end
    
end:
    #Termina o programa
    li a7, 10
    ecall
    
    
    